Problem----------------------------------


Given the root of a binary tree, return the postorder traversal of its nodes' values.

 

Example 1:


Input: root = [1,null,2,3]
Output: [3,2,1]
Example 2:

Input: root = []
Output: []
Example 3:

Input: root = [1]
Output: [1]


-------------------------------------------------------



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    List<Integer> ans=new ArrayList();

    public List<Integer> postorderTraversal(TreeNode root) {
        postorder(root);
        return ans;
    }

    public void postorder(TreeNode root)
    {
        //base case
        if(root==null)
            return;

        //traverse the left side
        postorder(root.left);
        
        //traverse the right side
        postorder(root.right);

        //take the current node value
        ans.add(root.val);
    }
}
